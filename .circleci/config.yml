version: 2.1

orbs:
  maven: circleci/maven@2.0.0
  heroku: circleci/heroku@2.0.0
  docker: circleci/docker@2.1.4
  postgres: onehq/postgres@1.1.0
  snyk: snyk/snyk@1.5.0

jobs:
  build:
    docker:
      - image: eclipse-temurin:17-jdk-jammy
      - image: postgis/postgis:15-3.3
        environment:
          POSTGRES_USER: ftsolutionadmin
          POSTGRES_PASSWORD: ftsolution
          POSTGRES_DB: ftsolution_db
    steps:
      - checkout
      - run:
          name: Install Maven
          command: |
            apt-get update && apt-get install -y maven
      - run:
          name: Install Dependencies
          command: mvn install -DskipTests
  test:
    docker:
      - image: eclipse-temurin:17-jdk-jammy
      - image: postgis/postgis:15-3.3
        environment:
          POSTGRES_HOST: postgres
          POSTGRES_USER: ftsolutionadmin
          POSTGRES_PASSWORD: ftsolution
          POSTGRES_DB: ftsolution_db
    steps:
      - checkout
      - run:
          name: Install Maven
          command: |
            apt-get update && apt-get install -y maven
      - run:
          name: Install Dependencies
          command: mvn install -DskipTests
      - run: |
          echo "Running tests"
          mvn test
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - run:
          name: Build Docker image
          command: |
            # Get the commit hash or version number to tag the image
            IMAGE_TAG=v1.0.0

            # Build the image with both a version tag and the :latest tag
            docker build -t dmaluu/module4-project:$IMAGE_TAG -t dmaluu/module4-project:latest .

      - run:
          name: Log in to DockerHub
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin

      - run:
          name: Push Docker images
          command: |
            # Push both the specific tag and the :latest tag to DockerHub
            docker push dmaluu/module4-project:$IMAGE_TAG
            docker push dmaluu/module4-project:latest
  deploy:
    docker:
      - image: dmaluu/module4-project:latest
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku stack:set container -a dmaluu-devops
            heroku container:push web -a dmaluu-devops
            heroku container:release web -a dmaluu-devops
workflows:
  simple_workflow:
    jobs:
      # - build:
      #     filters:
      #       branches:
      #         only:
      #           - main
      #           - release
      # - test:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only:
      #           - main
      #           - release
      - publish:
          # requires:
          #   - test
          filters:
            branches:
              only:
                - main
                - release
      # - deploy:
      #     requires:
      #       - publish
      #     filters:
      #       branches:
      #         only:
      #           - main
      #           - release
